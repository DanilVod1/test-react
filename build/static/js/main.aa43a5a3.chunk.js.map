{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","handleChange","event","target","value","setState","state","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","character","filter","i","className","ReactDOM","render","document","getElementById"],"mappings":"wNACMA,EAAc,WAClB,OACE,gCACE,+BACE,sCACA,2CAKFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJKA,MASb,OAAO,gCAAQJ,KAiBFS,EAdD,SAACV,GAAW,IAChBE,EAAmCF,EAAnCE,cAAeO,EAAoBT,EAApBS,gBAEvB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEP,cAAeA,EACfO,gBAAiBA,Q,OCcVE,E,4MA7CbC,aAAe,CACbN,KAAM,GACNC,IAAK,I,EAEPM,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBT,EADgB,EAChBA,KAAMU,EADU,EACVA,MAEd,EAAKC,SAAL,eACGX,EAAOU,K,EAIZE,MAAQ,EAAKN,a,EAEbO,WAAa,WACX,EAAKnB,MAAMoB,aAAa,EAAKF,OAC7B,EAAKD,SAAS,EAAKL,e,4CAGrB,WAAU,IAAD,EACeS,KAAKH,MAAnBZ,EADD,EACCA,KAAMC,EADP,EACOA,IACd,OACE,iCACE,uBAAOe,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHR,MAAOV,EACPmB,SAAUJ,KAAKR,eAEjB,uBAAOS,QAAQ,MAAf,iBACA,uBACEC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHR,MAAOT,EACPkB,SAAUJ,KAAKR,eAEjB,uBAAOU,KAAK,SAASP,MAAM,SAASR,QAASa,KAAKF,oB,GAxCvCO,aCsCJC,E,4MAnCbT,MAAQ,CACNU,WAAY,CACV,CACEtB,KAAM,UACNC,IAAK,a,EAIXa,aAAe,SAACS,GACd,EAAKZ,SAAS,CAAEW,WAAW,GAAD,mBAAM,EAAKV,MAAMU,YAAjB,CAA6BC,O,EAGzDpB,gBAAkB,SAACJ,GAAW,IACpBuB,EAAe,EAAKV,MAApBU,WAER,EAAKX,SAAS,CACZW,WAAYA,EAAWE,QAAO,SAACD,EAAWE,GACxC,OAAOA,IAAM1B,Q,4CAInB,WAAU,IACAuB,EAAeP,KAAKH,MAApBU,WACR,OACE,sBAAKI,UAAU,YAAf,UACE,cAAC,EAAD,CACE9B,cAAe0B,EACfnB,gBAAiBY,KAAKZ,kBAExB,cAAC,EAAD,CAAMW,aAAcC,KAAKD,sB,GA9BfM,aCClBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.aa43a5a3.chunk.js","sourcesContent":["import React from \"react\";\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n      </tr>\n    </thead>\n  );\n};\nconst TableBody = (props) => {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    );\n  });\n  return <tbody>{rows}</tbody>;\n};\n\nconst Table = (props) => {\n  const { characterData, removeCharacter } = props;\n\n  return (\n    <table>\n      <TableHeader />\n      <TableBody\n        characterData={characterData}\n        removeCharacter={removeCharacter}\n      />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\n\nclass Form extends Component {\n  initialState = {\n    name: \"\",\n    job: \"\",\n  };\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  state = this.initialState;\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state);\n    this.setState(this.initialState);\n  };\n\n  render() {\n    const { name, job } = this.state;\n    return (\n      <form>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={name}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"job\">Job</label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          id=\"job\"\n          value={job}\n          onChange={this.handleChange}\n        />\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport Form from \"./Form\";\n\nclass App extends Component {\n  state = {\n    characters: [\n      {\n        name: \"Charlie\",\n        job: \"Janitor\",\n      },\n    ],\n  };\n  handleSubmit = (character) => {\n    this.setState({ characters: [...this.state.characters, character] });\n  };\n\n  removeCharacter = (index) => {\n    const { characters } = this.state;\n\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index;\n      }),\n    });\n  };\n  render() {\n    const { characters } = this.state;\n    return (\n      <div className=\"container\">\n        <Table\n          characterData={characters}\n          removeCharacter={this.removeCharacter}\n        />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}